package com.capgemini.librarymanagementsystemjdbc.dao;

import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.LinkedList;
import java.util.Properties;

import com.capgemini.librarymanagementsystemjdbc.dto.BookBean;
import com.capgemini.librarymanagementsystemjdbc.dto.UsersBean;
import com.capgemini.librarymanagementsystemjdbc.exception.LMSException;

public class UsersDAOImplement implements UsersDAO {

	public boolean register(UsersBean user) {
		/*
		 * try(FileInputStream info = new FileInputStream("db.properties");){ Properties
		 * pro = new Properties(); pro.load(info); try(Connection conn =
		 * DriverManager.getConnection(pro.getProperty("dburl"),pro); PreparedStatement
		 * pstmt = conn.prepareStatement("insert into users values(?,?,?,?,?,?,?)")){
		 * Class.forName(pro.getProperty("path"));
		 */
		try (FileInputStream fin = new FileInputStream("dburl.properties")) {

			Properties pro = new Properties();
			pro.load(fin);

			Class.forName("com.mysql.jdbc.Driver");
			String dburl = "jdbc:mysql://localhost:3306/library_management_system";
			try (Connection conn = DriverManager.getConnection(dburl, "root", "root")) {
				String query = "insert into users values(?,?,?,?,?,?)";
				try (PreparedStatement pstmt = conn.prepareStatement(query);) {
					pstmt.setInt(1,user.getuId());
					pstmt.setString(2, user.getFirstName());
					pstmt.setString(3, user.getLastName());
					pstmt.setString(4, user.getEmail());
					pstmt.setString(5, user.getPassword());
					pstmt.setLong(6, user.getMobile());
					pstmt.setString(7, user.getRole());
					int count = pstmt.executeUpdate();
					if(user.getEmail().isEmpty() && count==0) {
						return false;
					} else {
						return true;
					}
				}
			}
		}catch(Exception e) {
			e.printStackTrace();
			return false;
		}
	}

	public UsersBean login(String email, String password) {
		try (FileInputStream fin = new FileInputStream("db.properties")) {

			Properties pro = new Properties();
			pro.load(fin);

			Class.forName(pro.getProperty("path")).newInstance();
			try (Connection conn = DriverManager.getConnection(pro.getProperty("dburl"), pro)) {
				String query = pro.getProperty("login");
				try (PreparedStatement pstmt = conn.prepareStatement(query);) {
					pstmt.setString(1, email);
					pstmt.setString(2, password);

					LinkedList<UsersBean> list = new LinkedList<UsersBean>();
					for(UsersBean bean : list) {
						if(bean.getEmail().equals(email) && bean.getPassword().equals(password)) {
							ResultSet set = pstmt.executeQuery(); 
							return bean;
						} 
					} throw new LMSException("Invalid EmailId and Password");
				}
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;

	}

	@Override
	public boolean addBook(BookBean book) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean updateBook(BookBean book) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public LinkedList<BookBean> searchBookById(int bId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public LinkedList<BookBean> searchBookByTitle(String bookName) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public LinkedList<BookBean> searchBookByAuthor(String author) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public LinkedList<BookBean> getBooksInfo() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean request(int bId, String author) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean issueBook(int bId, int uId) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public BookBean borrowBook(int bId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean returnBook(int bId) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean removeBook(int bId) {
		// TODO Auto-generated method stub
		return false;
	}


}
